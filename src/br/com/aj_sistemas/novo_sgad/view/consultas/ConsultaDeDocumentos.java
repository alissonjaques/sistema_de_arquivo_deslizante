package br.com.aj_sistemas.novo_sgad.view.consultas;

import br.com.aj_sistemas.novo_sgad.controller.DocumentoController;
import br.com.aj_sistemas.novo_sgad.controller.NomeDosCamposController;
import br.com.aj_sistemas.novo_sgad.model.NomeDosCampos;
import br.com.aj_sistemas.novo_sgad.utils.BibliotecaDeMetodos;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alisson Jaques
 */
public class ConsultaDeDocumentos extends javax.swing.JInternalFrame {

    private final NomeDosCamposController controleNomeDosCampos;
    private final DocumentoController documentoController; 
    private List<NomeDosCampos> listaNomeDosCampos;
    private List<String> listaDeDocumentos;

    /**
     * Creates new form ConsultaDeDocumentos
     */
    public ConsultaDeDocumentos() {
        this.setFrameIcon(new ImageIcon("src\\br\\com\\aj_sistemas\\novo_sgad\\img\\arquivo.png"));
        initComponents();
        controleNomeDosCampos = new NomeDosCamposController();
        documentoController = new DocumentoController();
        listaNomeDosCampos = controleNomeDosCampos.selecionar("");
        listaDeDocumentos = new ArrayList();
        preencherComboBox();
        acionaComEnter();
    }

    private void acionaComEnter() {
        getRootPane().setDefaultButton(getJbPesquisar());
    }
    
    private void preencherComboBox() {
        getListaNomeDosCampos().forEach((nomeDosCampos) -> {
            getJcbTipoDocumental().addItem(nomeDosCampos.getNome());
        });
    }
    
    private void preencherTabela() {
        limparTabela();
        DefaultTableModel modelo = (DefaultTableModel) getJtTabela().getModel();
        String[] documento;
        for(int i=0; i<getListaDeDocumentos().size(); i++){
             documento = getListaDeDocumentos().get(i).split(":");             
             modelo.addRow(new Object[]{
                documento[4],
                documento[0],
                BibliotecaDeMetodos.getData(documento[1]),
                documento[10],
                documento[2],
                documento[3]
            });
        }
    }
    
    /**
     * O método limparTabela() limpa a tabela de interface do usuário
     */
    public void limparTabela() {
        DefaultTableModel dm = (DefaultTableModel) getJtTabela().getModel();
        dm.getDataVector().removeAllElements();
        dm.fireTableDataChanged();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlTipoDocumental = new javax.swing.JLabel();
        jcbTipoDocumental = new javax.swing.JComboBox<>();
        jlConsultaPor = new javax.swing.JLabel();
        jcbValor = new javax.swing.JComboBox<>();
        jtfConsulta = new javax.swing.JTextField();
        jlConsulta = new javax.swing.JLabel();
        jbPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabela = new javax.swing.JTable();
        jlOrientacao = new javax.swing.JLabel();

        setBackground(new java.awt.Color(72, 61, 139));
        setClosable(true);
        setIconifiable(true);
        setTitle("Consulta de Documentos");

        jlTipoDocumental.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jlTipoDocumental.setText("Tipo Documental:");

        jcbTipoDocumental.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jcbTipoDocumental.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoDocumentalActionPerformed(evt);
            }
        });

        jlConsultaPor.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jlConsultaPor.setText("Consultar por:");

        jcbValor.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jcbValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbValorActionPerformed(evt);
            }
        });

        jtfConsulta.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jlConsulta.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jlConsulta.setText("Termo para consulta:");

        jbPesquisar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jbPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/aj_sistemas/novo_sgad/img/Search.png"))); // NOI18N
        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N° da Caixa", "Ordem", "Data Documento", "Descrição", "Usuário Última Alteração", "Situação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtTabela);

        jlOrientacao.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jlOrientacao.setText("Dê um duplo clique no elemento da tabela para ver informações adicionais do documento.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlTipoDocumental, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfConsulta)
                                .addGap(18, 18, 18)
                                .addComponent(jbPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jcbTipoDocumental, 0, 295, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlConsultaPor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbValor, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlOrientacao)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTipoDocumental)
                    .addComponent(jcbTipoDocumental, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlConsultaPor)
                    .addComponent(jcbValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlConsulta)
                    .addComponent(jbPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlOrientacao)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTabelaMouseClicked
        if (evt.getClickCount() == 2) {
            int linha = getJtTabela().getSelectedRow();
            DetalhesDocumento telaDetalhes = new DetalhesDocumento(getListaDeDocumentos().get(linha));
            telaDetalhes.setVisible(true);
        }
    }//GEN-LAST:event_jtTabelaMouseClicked

    private void jcbValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbValorActionPerformed

    }//GEN-LAST:event_jcbValorActionPerformed

    private void jcbTipoDocumentalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoDocumentalActionPerformed
        getJcbValor().removeAllItems();
        NomeDosCampos nomeDosCampos = getListaNomeDosCampos().get(getJcbTipoDocumental().getSelectedIndex());
        getJcbValor().addItem(nomeDosCampos.getNome1());
        getJcbValor().addItem(nomeDosCampos.getNome2());
        getJcbValor().addItem(nomeDosCampos.getNome3());
        getJcbValor().addItem(nomeDosCampos.getNome4());
        getJcbValor().addItem(nomeDosCampos.getNome5());
        getJcbValor().addItem(nomeDosCampos.getNome6());
        getJcbValor().addItem(nomeDosCampos.getNome7());
    }//GEN-LAST:event_jcbTipoDocumentalActionPerformed
    
    private void acaoPesquisar(){
        String tipoDocumental = getJcbTipoDocumental().getSelectedItem().toString();       
        String termo = getJtfConsulta().getText();
        int valor = getJcbValor().getSelectedIndex()+1;
        listaDeDocumentos = getDocumentoController().buscarDocumento(tipoDocumental,valor,"%"+termo+"%");
        if(listaDeDocumentos.isEmpty()){
            limparTabela();
            JOptionPane.showMessageDialog(this, "Nenhum resultado para a consulta informada!", "Alerta", 2);
        } else{
            preencherTabela();
        }
    }
    
    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        acaoPesquisar();
    }//GEN-LAST:event_jbPesquisarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JComboBox<String> jcbTipoDocumental;
    private javax.swing.JComboBox<String> jcbValor;
    private javax.swing.JLabel jlConsulta;
    private javax.swing.JLabel jlConsultaPor;
    private javax.swing.JLabel jlOrientacao;
    private javax.swing.JLabel jlTipoDocumental;
    private javax.swing.JTable jtTabela;
    private javax.swing.JTextField jtfConsulta;
    // End of variables declaration//GEN-END:variables
    
    /**
     * @return the documentoController
     */
    public DocumentoController getDocumentoController() {
        return documentoController;
    }
    
    /**
     * @return the listaDeDocumentos
     */
    public List<String> getListaDeDocumentos() {
        return listaDeDocumentos;
    }

    /**
     * @param listaDeDocumentos the listaDeDocumentos to set
     */
    public void setListaDeDocumentos(List<String> listaDeDocumentos) {
        this.listaDeDocumentos = listaDeDocumentos;
    }
    
    /**
     * @return the listaNomeDosCampos
     */
    public List<NomeDosCampos> getListaNomeDosCampos() {
        return listaNomeDosCampos;
    }

    /**
     * @param listaNomeDosCampos the listaNomeDosCampos to set
     */
    public void setListaNomeDosCampos(List<NomeDosCampos> listaNomeDosCampos) {
        this.listaNomeDosCampos = listaNomeDosCampos;
    }

    /**
     * @return the jPanel1
     */
    public javax.swing.JPanel getjPanel1() {
        return jPanel1;
    }

    /**
     * @param jPanel1 the jPanel1 to set
     */
    public void setjPanel1(javax.swing.JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    /**
     * @return the jScrollPane1
     */
    public javax.swing.JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    /**
     * @param jScrollPane1 the jScrollPane1 to set
     */
    public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    /**
     * @return the jbPesquisar
     */
    public javax.swing.JButton getJbPesquisar() {
        return jbPesquisar;
    }

    /**
     * @param jbPesquisar the jbPesquisar to set
     */
    public void setJbPesquisar(javax.swing.JButton jbPesquisar) {
        this.jbPesquisar = jbPesquisar;
    }

    /**
     * @return the jcbTipoDocumental
     */
    public javax.swing.JComboBox<String> getJcbTipoDocumental() {
        return jcbTipoDocumental;
    }

    /**
     * @param jcbTipoDocumental the jcbTipoDocumental to set
     */
    public void setJcbTipoDocumental(javax.swing.JComboBox<String> jcbTipoDocumental) {
        this.jcbTipoDocumental = jcbTipoDocumental;
    }

    /**
     * @return the jcbValor
     */
    public javax.swing.JComboBox<String> getJcbValor() {
        return jcbValor;
    }

    /**
     * @param jcbValor the jcbValor to set
     */
    public void setJcbValor(javax.swing.JComboBox<String> jcbValor) {
        this.jcbValor = jcbValor;
    }

    /**
     * @return the jlConsulta
     */
    public javax.swing.JLabel getJlConsulta() {
        return jlConsulta;
    }

    /**
     * @param jlConsulta the jlConsulta to set
     */
    public void setJlConsulta(javax.swing.JLabel jlConsulta) {
        this.jlConsulta = jlConsulta;
    }

    /**
     * @return the jlConsultaPor
     */
    public javax.swing.JLabel getJlConsultaPor() {
        return jlConsultaPor;
    }

    /**
     * @param jlConsultaPor the jlConsultaPor to set
     */
    public void setJlConsultaPor(javax.swing.JLabel jlConsultaPor) {
        this.jlConsultaPor = jlConsultaPor;
    }

    /**
     * @return the jlOrientacao
     */
    public javax.swing.JLabel getJlOrientacao() {
        return jlOrientacao;
    }

    /**
     * @param jlOrientacao the jlOrientacao to set
     */
    public void setJlOrientacao(javax.swing.JLabel jlOrientacao) {
        this.jlOrientacao = jlOrientacao;
    }

    /**
     * @return the jlTipoDocumental
     */
    public javax.swing.JLabel getJlTipoDocumental() {
        return jlTipoDocumental;
    }

    /**
     * @param jlTipoDocumental the jlTipoDocumental to set
     */
    public void setJlTipoDocumental(javax.swing.JLabel jlTipoDocumental) {
        this.jlTipoDocumental = jlTipoDocumental;
    }

    /**
     * @return the jtTabela
     */
    public javax.swing.JTable getJtTabela() {
        return jtTabela;
    }

    /**
     * @param jtTabela the jtTabela to set
     */
    public void setJtTabela(javax.swing.JTable jtTabela) {
        this.jtTabela = jtTabela;
    }

    /**
     * @return the jtfConsulta
     */
    public javax.swing.JTextField getJtfConsulta() {
        return jtfConsulta;
    }

    /**
     * @param jtfConsulta the jtfConsulta to set
     */
    public void setJtfConsulta(javax.swing.JTextField jtfConsulta) {
        this.jtfConsulta = jtfConsulta;
    }
}
